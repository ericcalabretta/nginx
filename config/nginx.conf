worker_processes  {{cfg.worker_processes}};
daemon off;

events {
    worker_connections  {{cfg.events.worker_connections}};
}

http {
    include        mime.types;
    default_type   application/octet-stream;

    sendfile       {{cfg.http.sendfile}};
    tcp_nopush     {{cfg.http.tcp_nopush}};
    tcp_nodelay    {{cfg.http.tcp_nodelay}};

    keepalive_timeout  {{cfg.http.keepalive_timeout}};

    gzip  on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    proxy_cache_path {{pkg.svc_var_path}}/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$proxy_host$uri$is_args$args $http_user_agent";
    proxy_cache_valid 10m;
    add_header X-Cache-Status $upstream_cache_status;

    log_format custom_cache_log '[$time_local] [Cache:$upstream_cache_status] [$host] [Remote_Addr: $remote_addr] - $remote_user - $server_name to: $upstream_addr: "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" ' ;


    server {
      listen {{cfg.http.listen.port}} default_server;
      server_name _;

      access_log /dev/stdout;
      error_log /dev/stderr;
      access_log  {{pkg.svc_var_path}}/bldr-cache.log custom_cache_log ;

      location /v1/depot {
        proxy_cache my_cache;
        proxy_pass {{cfg.cache.proxy_pass_url}};
        proxy_cache_lock on;
       }
    } 


    {{#if cfg.redirector ~}}
    server {
        listen       {{cfg.http.listen.port}} default_server;
        listen       [::]:{{cfg.http.listen.port}} default_server;
        server_name  _;
        return 301 https://$host$request_uri;
    }
    {{else}}
    server {
        listen       {{cfg.http.listen.port}};
        server_name  localhost;

        location / {
            root   {{pkg.svc_data_path}};
            index  index.html index.htm;
    }
  }
  {{/if ~}}
}
